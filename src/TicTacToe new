import java.util.Scanner;

public class TicTacToe {
    private char[][] board;
    private boolean firstPlayer = true;
    private boolean gameOver = false;

    public TicTacToe() {
        board = new char[3][3];
        for (int i = 0; i < 3; i++)
            for (int j = 0; j < 3; j++)
                board[i][j] = ' ';
    }

    public static void main(String[] args) {
        TicTacToe game = new TicTacToe();
        game.play();
    }

    public void play() {
        try (Scanner scanner = new Scanner(System.in)) {
            printBoard();

            while (!gameOver) { //while game is not over loop process of players picking spots
                int row, col;
                printStatus(firstPlayer ? 1 : 2);

                while (true) {
                    System.out.print("Enter row (0-2) and column (0-2): ");
                    try {
                        row = scanner.nextInt();
                        col = scanner.nextInt();
                        if (validMove(row, col)) break;
                        System.out.println("Invalid move, try again.");
                    } catch (Exception e) { //if user has invalid input
                        System.out.println("Invalid input. Please enter two numbers.");
                        scanner.nextLine(); // clear input
                    }
                }

                makeMove(row, col);
                printBoard();
                checkGameOver();
                firstPlayer = !firstPlayer;
            }
        }

        printResult();
    }

    private void printBoard() {
        System.out.println();
        for (int i = 0; i < 3; i++) { //for loop to make the board
            for (int j = 0; j < 3; j++) {
                printSymbol(board[i][j]);
                if (j < 2) System.out.print("|");
            }
            System.out.println();
            if (i < 2) System.out.println("-----------");
        }
        System.out.println();
    }

    private void printSymbol(char c) {
        System.out.print(" " + c + " ");
    }

    private void printStatus(int player) {
        System.out.println("Player " + player + "'s turn (" + (player == 1 ? 'X' : 'O') + ")");
    }

    private boolean validMove(int row, int col) {
        return row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ';
    }

    private void makeMove(int row, int col) {
        board[row][col] = firstPlayer ? 'X' : 'O';
    }

    private void checkGameOver() {
        // check rows, columns, diagonals
        for (int i = 0; i < 3; i++) {
            if (board[i][0] != ' ' &&
                board[i][0] == board[i][1] &&
                board[i][1] == board[i][2]) {
                gameOver = true;
                return;
            }

            if (board[0][i] != ' ' &&
                board[0][i] == board[1][i] &&
                board[1][i] == board[2][i]) {
                gameOver = true;
                return;
            }
        }

        if (board[0][0] != ' ' &&
            board[0][0] == board[1][1] &&
            board[1][1] == board[2][2]) {
            gameOver = true;
            return;
        }

        if (board[0][2] != ' ' &&
            board[0][2] == board[1][1] &&
            board[1][1] == board[2][0]) {
            gameOver = true;
            return;
        }

        // check for draw
        boolean full = true;
        for (int i = 0; i < 3; i++)
            for (int j = 0; j < 3; j++)
                if (board[i][j] == ' ')
                    full = false;

        if (full) gameOver = true;
    }

    private void printResult() {
        if (isWinner('X')) {
            System.out.println("Player 1 (X) wins!");
        } else if (isWinner('O')) {
            System.out.println("Player 2 (O) wins!");
        } else {
            System.out.println("It's a draw!");
        }
    }

    private boolean isWinner(char symbol) {
        // uses the same checks as in checkGameOver
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == symbol && board[i][1] == symbol && board[i][2] == symbol) return true;
            if (board[0][i] == symbol && board[1][i] == symbol && board[2][i] == symbol) return true;
        }

        if (board[0][0] == symbol && board[1][1] == symbol && board[2][2] == symbol) return true;
        if (board[0][2] == symbol && board[1][1] == symbol && board[2][0] == symbol) return true;

        return false;
    }
}
